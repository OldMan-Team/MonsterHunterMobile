// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SocketGameProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketGameProtocol {

  /// <summary>Holder for reflection information generated from SocketGameProtocol.proto</summary>
  public static partial class SocketGameProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for SocketGameProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocketGameProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTb2NrZXRHYW1lUHJvdG9jb2wucHJvdG8SElNvY2tldEdhbWVQcm90b2Nv",
            "bCLhAgoITWFpblBhY2sSNAoLcmVxdWVzdENvZGUYASABKA4yHy5Tb2NrZXRH",
            "YW1lUHJvdG9jb2wuUmVxdWVzdENvZGUSMgoKYWN0aW9uQ29kZRgCIAEoDjIe",
            "LlNvY2tldEdhbWVQcm90b2NvbC5BY3Rpb25Db2RlEjIKCnJldHVybkNvZGUY",
            "AyABKA4yHi5Tb2NrZXRHYW1lUHJvdG9jb2wuUmV0dXJuQ29kZRILCgNzdHIY",
            "BCABKAkSDAoEdXNlchgFIAEoCRIyCgpwbGF5ZXJQYWNrGAYgAygLMh4uU29j",
            "a2V0R2FtZVByb3RvY29sLlBsYXllclBhY2sSLgoIcm9vbVBhY2sYByADKAsy",
            "HC5Tb2NrZXRHYW1lUHJvdG9jb2wuUm9vbVBhY2sSOAoNb3BlcmF0aW9uUGFj",
            "axgIIAEoCzIhLlNvY2tldEdhbWVQcm90b2NvbC5PcGVyYXRpb25QYWNrInAK",
            "CFJvb21QYWNrEg4KBm1heE51bRgBIAEoAhIOCgZjdXJOdW0YAiABKAISEAoI",
            "cm9vbU5hbWUYAyABKAkSMgoKcm9vbVN0YXR1cxgEIAEoDjIeLlNvY2tldEdh",
            "bWVQcm90b2NvbC5Sb29tU3RhdHVzIjMKB1Bvc1BhY2sSDAoEUG9zWBgBIAEo",
            "AhIMCgRQb3NZGAIgASgCEgwKBFJvdFoYAyABKAIioAEKClBsYXllclBhY2sS",
            "EgoKcGxheWVyTmFtZRgBIAEoCRIQCghwbGF5ZXJJRBgCIAEoCRIyCgpvY2N1",
            "cGF0aW9uGAMgASgOMh4uU29ja2V0R2FtZVByb3RvY29sLk9jY3VwYXRpb24S",
            "LAoHcG9zUGFjaxgEIAEoCzIbLlNvY2tldEdhbWVQcm90b2NvbC5Qb3NQYWNr",
            "EgoKAkhQGAUgASgCIlgKDU9wZXJhdGlvblBhY2sSNAoJb3BlcmF0aW9uGAEg",
            "ASgOMiEuU29ja2V0R2FtZVByb3RvY29sLk9wZXJhdGlvblR5cGUSEQoJZGly",
            "ZWN0aW9uGAIgASgCKj0KC1JlcXVlc3RDb2RlEg8KC1JlcXVlc3ROb25lEAAS",
            "CwoHQ29ubmVjdBABEggKBEdhbWUQAhIGCgJVSRADKtkBCgpBY3Rpb25Db2Rl",
            "Eg4KCkFjdGlvbk5vbmUQABIOCgpDcmVhdGVSb29tEAESDAoIRmluZFJvb20Q",
            "AhIQCgxVcFBsYXllckxpc3QQAxITCg9VcENoYXJhY3Rlckxpc3QQBBITCg9D",
            "bGVhclBsYXllckxpc3QQBRIMCghKb2luUm9vbRAGEgwKCEV4aXRSb29tEAcS",
            "DQoJU3RhcnRHYW1lEAgSDAoIRXhpdEdhbWUQCRIMCghTdGFydGluZxAKEgkK",
            "BVVwUG9zEAsSDwoLVXBPcGVyYXRpb24QDCozCgpSZXR1cm5Db2RlEg4KClJl",
            "dHVybk5vbmUQABILCgdTdWNjZWVkEAESCAoERmFpbBACKiwKCk9jY3VwYXRp",
            "b24SEgoOT2NjdXBhdGlvbk5vbmUQABIKCgZBcmNoZXIQASpACgpSb29tU3Rh",
            "dHVzEgwKCFJvb21Ob25lEAASCwoHVmFjYW5jeRABEgoKBkVub3VnaBACEgsK",
            "B1BsYXlpbmcQAypdCg1PcGVyYXRpb25UeXBlEgkKBUNsaWNrEAASEAoMT25Q",
            "cmVzc1N0YXJ0EAESDgoKT25QcmVzc0VuZBACEhAKDE9uRHJhZ1VwZGF0ZRAD",
            "Eg0KCU9uRHJhZ0VuZBAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SocketGameProtocol.RequestCode), typeof(global::SocketGameProtocol.ActionCode), typeof(global::SocketGameProtocol.ReturnCode), typeof(global::SocketGameProtocol.Occupation), typeof(global::SocketGameProtocol.RoomStatus), typeof(global::SocketGameProtocol.OperationType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.MainPack), global::SocketGameProtocol.MainPack.Parser, new[]{ "RequestCode", "ActionCode", "ReturnCode", "Str", "User", "PlayerPack", "RoomPack", "OperationPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.RoomPack), global::SocketGameProtocol.RoomPack.Parser, new[]{ "MaxNum", "CurNum", "RoomName", "RoomStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.PosPack), global::SocketGameProtocol.PosPack.Parser, new[]{ "PosX", "PosY", "RotZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.PlayerPack), global::SocketGameProtocol.PlayerPack.Parser, new[]{ "PlayerName", "PlayerID", "Occupation", "PosPack", "HP" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.OperationPack), global::SocketGameProtocol.OperationPack.Parser, new[]{ "Operation", "Direction" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///enum
  ///请求类型
  /// </summary>
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    [pbr::OriginalName("Connect")] Connect = 1,
    [pbr::OriginalName("Game")] Game = 2,
    [pbr::OriginalName("UI")] Ui = 3,
  }

  /// <summary>
  ///具体行为
  /// </summary>
  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    ///Connect
    /// </summary>
    [pbr::OriginalName("CreateRoom")] CreateRoom = 1,
    [pbr::OriginalName("FindRoom")] FindRoom = 2,
    /// <summary>
    ///房间里的更新
    /// </summary>
    [pbr::OriginalName("UpPlayerList")] UpPlayerList = 3,
    /// <summary>
    ///游戏里的更新
    /// </summary>
    [pbr::OriginalName("UpCharacterList")] UpCharacterList = 4,
    [pbr::OriginalName("ClearPlayerList")] ClearPlayerList = 5,
    [pbr::OriginalName("JoinRoom")] JoinRoom = 6,
    /// <summary>
    ///房主退出房间，所有人退出房间
    /// </summary>
    [pbr::OriginalName("ExitRoom")] ExitRoom = 7,
    /// <summary>
    ///客户端发给服务端
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 8,
    [pbr::OriginalName("ExitGame")] ExitGame = 9,
    /// <summary>
    ///服务端发来的开始游戏指令
    /// </summary>
    [pbr::OriginalName("Starting")] Starting = 10,
    /// <summary>
    ///Move
    /// </summary>
    [pbr::OriginalName("UpPos")] UpPos = 11,
    /// <summary>
    ///UI
    /// </summary>
    [pbr::OriginalName("UpOperation")] UpOperation = 12,
  }

  /// <summary>
  ///返回类型
  /// </summary>
  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    [pbr::OriginalName("Succeed")] Succeed = 1,
    [pbr::OriginalName("Fail")] Fail = 2,
  }

  /// <summary>
  ///职业类型
  /// </summary>
  public enum Occupation {
    [pbr::OriginalName("OccupationNone")] None = 0,
    [pbr::OriginalName("Archer")] Archer = 1,
  }

  /// <summary>
  ///房间状态
  /// </summary>
  public enum RoomStatus {
    [pbr::OriginalName("RoomNone")] RoomNone = 0,
    /// <summary>
    ///已存在房间，还缺人
    /// </summary>
    [pbr::OriginalName("Vacancy")] Vacancy = 1,
    /// <summary>
    ///满人
    /// </summary>
    [pbr::OriginalName("Enough")] Enough = 2,
    /// <summary>
    ///开始游戏
    /// </summary>
    [pbr::OriginalName("Playing")] Playing = 3,
  }

  /// <summary>
  ///操作类型
  /// </summary>
  public enum OperationType {
    [pbr::OriginalName("Click")] Click = 0,
    [pbr::OriginalName("OnPressStart")] OnPressStart = 1,
    [pbr::OriginalName("OnPressEnd")] OnPressEnd = 2,
    [pbr::OriginalName("OnDragUpdate")] OnDragUpdate = 3,
    [pbr::OriginalName("OnDragEnd")] OnDragEnd = 4,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestCode_ = other.requestCode_;
      actionCode_ = other.actionCode_;
      returnCode_ = other.returnCode_;
      str_ = other.str_;
      user_ = other.user_;
      playerPack_ = other.playerPack_.Clone();
      roomPack_ = other.roomPack_.Clone();
      operationPack_ = other.operationPack_ != null ? other.operationPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::SocketGameProtocol.RequestCode requestCode_ = global::SocketGameProtocol.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "actionCode" field.</summary>
    public const int ActionCodeFieldNumber = 2;
    private global::SocketGameProtocol.ActionCode actionCode_ = global::SocketGameProtocol.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.ActionCode ActionCode {
      get { return actionCode_; }
      set {
        actionCode_ = value;
      }
    }

    /// <summary>Field number for the "returnCode" field.</summary>
    public const int ReturnCodeFieldNumber = 3;
    private global::SocketGameProtocol.ReturnCode returnCode_ = global::SocketGameProtocol.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 4;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 5;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.PlayerPack> _repeated_playerPack_codec
        = pb::FieldCodec.ForMessage(50, global::SocketGameProtocol.PlayerPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.PlayerPack> playerPack_ = new pbc::RepeatedField<global::SocketGameProtocol.PlayerPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.PlayerPack> PlayerPack {
      get { return playerPack_; }
    }

    /// <summary>Field number for the "roomPack" field.</summary>
    public const int RoomPackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.RoomPack> _repeated_roomPack_codec
        = pb::FieldCodec.ForMessage(58, global::SocketGameProtocol.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.RoomPack> roomPack_ = new pbc::RepeatedField<global::SocketGameProtocol.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.RoomPack> RoomPack {
      get { return roomPack_; }
    }

    /// <summary>Field number for the "operationPack" field.</summary>
    public const int OperationPackFieldNumber = 8;
    private global::SocketGameProtocol.OperationPack operationPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.OperationPack OperationPack {
      get { return operationPack_; }
      set {
        operationPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ActionCode != other.ActionCode) return false;
      if (ReturnCode != other.ReturnCode) return false;
      if (Str != other.Str) return false;
      if (User != other.User) return false;
      if(!playerPack_.Equals(other.playerPack_)) return false;
      if(!roomPack_.Equals(other.roomPack_)) return false;
      if (!object.Equals(OperationPack, other.OperationPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) hash ^= RequestCode.GetHashCode();
      if (ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) hash ^= ActionCode.GetHashCode();
      if (ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) hash ^= ReturnCode.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      hash ^= playerPack_.GetHashCode();
      hash ^= roomPack_.GetHashCode();
      if (operationPack_ != null) hash ^= OperationPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionCode);
      }
      if (ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReturnCode);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Str);
      }
      if (User.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(User);
      }
      playerPack_.WriteTo(output, _repeated_playerPack_codec);
      roomPack_.WriteTo(output, _repeated_roomPack_codec);
      if (operationPack_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(OperationPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionCode);
      }
      if (ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      size += playerPack_.CalculateSize(_repeated_playerPack_codec);
      size += roomPack_.CalculateSize(_repeated_roomPack_codec);
      if (operationPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) {
        RequestCode = other.RequestCode;
      }
      if (other.ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) {
        ActionCode = other.ActionCode;
      }
      if (other.ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        ReturnCode = other.ReturnCode;
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      playerPack_.Add(other.playerPack_);
      roomPack_.Add(other.roomPack_);
      if (other.operationPack_ != null) {
        if (operationPack_ == null) {
          OperationPack = new global::SocketGameProtocol.OperationPack();
        }
        OperationPack.MergeFrom(other.OperationPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::SocketGameProtocol.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActionCode = (global::SocketGameProtocol.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            ReturnCode = (global::SocketGameProtocol.ReturnCode) input.ReadEnum();
            break;
          }
          case 34: {
            Str = input.ReadString();
            break;
          }
          case 42: {
            User = input.ReadString();
            break;
          }
          case 50: {
            playerPack_.AddEntriesFrom(input, _repeated_playerPack_codec);
            break;
          }
          case 58: {
            roomPack_.AddEntriesFrom(input, _repeated_roomPack_codec);
            break;
          }
          case 66: {
            if (operationPack_ == null) {
              OperationPack = new global::SocketGameProtocol.OperationPack();
            }
            input.ReadMessage(OperationPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      maxNum_ = other.maxNum_;
      curNum_ = other.curNum_;
      roomName_ = other.roomName_;
      roomStatus_ = other.roomStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "maxNum" field.</summary>
    public const int MaxNumFieldNumber = 1;
    private float maxNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxNum {
      get { return maxNum_; }
      set {
        maxNum_ = value;
      }
    }

    /// <summary>Field number for the "curNum" field.</summary>
    public const int CurNumFieldNumber = 2;
    private float curNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CurNum {
      get { return curNum_; }
      set {
        curNum_ = value;
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 3;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomStatus" field.</summary>
    public const int RoomStatusFieldNumber = 4;
    private global::SocketGameProtocol.RoomStatus roomStatus_ = global::SocketGameProtocol.RoomStatus.RoomNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RoomStatus RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxNum, other.MaxNum)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurNum, other.CurNum)) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomStatus != other.RoomStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxNum != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxNum);
      if (CurNum != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurNum);
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomStatus != global::SocketGameProtocol.RoomStatus.RoomNone) hash ^= RoomStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxNum != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(MaxNum);
      }
      if (CurNum != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurNum);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomName);
      }
      if (RoomStatus != global::SocketGameProtocol.RoomStatus.RoomNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RoomStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxNum != 0F) {
        size += 1 + 4;
      }
      if (CurNum != 0F) {
        size += 1 + 4;
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomStatus != global::SocketGameProtocol.RoomStatus.RoomNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.MaxNum != 0F) {
        MaxNum = other.MaxNum;
      }
      if (other.CurNum != 0F) {
        CurNum = other.CurNum;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomStatus != global::SocketGameProtocol.RoomStatus.RoomNone) {
        RoomStatus = other.RoomStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            MaxNum = input.ReadFloat();
            break;
          }
          case 21: {
            CurNum = input.ReadFloat();
            break;
          }
          case 26: {
            RoomName = input.ReadString();
            break;
          }
          case 32: {
            RoomStatus = (global::SocketGameProtocol.RoomStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PosPack : pb::IMessage<PosPack> {
    private static readonly pb::MessageParser<PosPack> _parser = new pb::MessageParser<PosPack>(() => new PosPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PosPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack(PosPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack Clone() {
      return new PosPack(this);
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "RotZ" field.</summary>
    public const int RotZFieldNumber = 3;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PosPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PosPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PosPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerPack : pb::IMessage<PlayerPack> {
    private static readonly pb::MessageParser<PlayerPack> _parser = new pb::MessageParser<PlayerPack>(() => new PlayerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack(PlayerPack other) : this() {
      playerName_ = other.playerName_;
      playerID_ = other.playerID_;
      occupation_ = other.occupation_;
      posPack_ = other.posPack_ != null ? other.posPack_.Clone() : null;
      hP_ = other.hP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack Clone() {
      return new PlayerPack(this);
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 2;
    private string playerID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "occupation" field.</summary>
    public const int OccupationFieldNumber = 3;
    private global::SocketGameProtocol.Occupation occupation_ = global::SocketGameProtocol.Occupation.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.Occupation Occupation {
      get { return occupation_; }
      set {
        occupation_ = value;
      }
    }

    /// <summary>Field number for the "posPack" field.</summary>
    public const int PosPackFieldNumber = 4;
    private global::SocketGameProtocol.PosPack posPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.PosPack PosPack {
      get { return posPack_; }
      set {
        posPack_ = value;
      }
    }

    /// <summary>Field number for the "HP" field.</summary>
    public const int HPFieldNumber = 5;
    private float hP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HP {
      get { return hP_; }
      set {
        hP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (PlayerID != other.PlayerID) return false;
      if (Occupation != other.Occupation) return false;
      if (!object.Equals(PosPack, other.PosPack)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HP, other.HP)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Occupation != global::SocketGameProtocol.Occupation.None) hash ^= Occupation.GetHashCode();
      if (posPack_ != null) hash ^= PosPack.GetHashCode();
      if (HP != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HP);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (PlayerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerID);
      }
      if (Occupation != global::SocketGameProtocol.Occupation.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Occupation);
      }
      if (posPack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PosPack);
      }
      if (HP != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(HP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Occupation != global::SocketGameProtocol.Occupation.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Occupation);
      }
      if (posPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosPack);
      }
      if (HP != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPack other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Occupation != global::SocketGameProtocol.Occupation.None) {
        Occupation = other.Occupation;
      }
      if (other.posPack_ != null) {
        if (posPack_ == null) {
          PosPack = new global::SocketGameProtocol.PosPack();
        }
        PosPack.MergeFrom(other.PosPack);
      }
      if (other.HP != 0F) {
        HP = other.HP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 18: {
            PlayerID = input.ReadString();
            break;
          }
          case 24: {
            Occupation = (global::SocketGameProtocol.Occupation) input.ReadEnum();
            break;
          }
          case 34: {
            if (posPack_ == null) {
              PosPack = new global::SocketGameProtocol.PosPack();
            }
            input.ReadMessage(PosPack);
            break;
          }
          case 45: {
            HP = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationPack : pb::IMessage<OperationPack> {
    private static readonly pb::MessageParser<OperationPack> _parser = new pb::MessageParser<OperationPack>(() => new OperationPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationPack(OperationPack other) : this() {
      operation_ = other.operation_;
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationPack Clone() {
      return new OperationPack(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::SocketGameProtocol.OperationType operation_ = global::SocketGameProtocol.OperationType.Click;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.OperationType Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private float direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operation != other.Operation) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Direction, other.Direction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Operation != global::SocketGameProtocol.OperationType.Click) hash ^= Operation.GetHashCode();
      if (Direction != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Direction);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Operation != global::SocketGameProtocol.OperationType.Click) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (Direction != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Operation != global::SocketGameProtocol.OperationType.Click) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (Direction != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationPack other) {
      if (other == null) {
        return;
      }
      if (other.Operation != global::SocketGameProtocol.OperationType.Click) {
        Operation = other.Operation;
      }
      if (other.Direction != 0F) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Operation = (global::SocketGameProtocol.OperationType) input.ReadEnum();
            break;
          }
          case 21: {
            Direction = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
